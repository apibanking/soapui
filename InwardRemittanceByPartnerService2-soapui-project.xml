<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="d5211b52-67f2-466e-8a0d-3f49f42c68bb" activeEnvironment="Default" name="InwardRemittanceByPartnerService2" resourceRoot="" soapui-version="5.1.1" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="496a77e5-69c9-4679-bf1b-dc9b129033de" wsaVersion="NONE" name="InwardRemittanceByPartnerService2HttpBinding" type="wsdl" bindingName="{http://www.quantiguous.com/services}InwardRemittanceByPartnerService2HttpBinding" soapVersion="1_2" anonymous="optional" definition="https://api.quantiguous.com/InwardRemittanceByPartnerService2?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://api.quantiguous.com/InwardRemittanceByPartnerService2?wsdl"><con:part><con:url>https://api.quantiguous.com/InwardRemittanceByPartnerService2?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="InwardRemittanceByPartnerService2" targetNamespace="http://www.quantiguous.com/services" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://www.quantiguous.com/services" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:documentation>
    <wsdl:appinfo source="WMQI_APPINFO">
      <MRWSDLAppInfo imported="true">
        <binding hasEncoding="false" imported="true" name="InwardRemittanceByPartnerService2HttpBinding" originalBindingStyle="document"/>
        <generatedXSD location="InwardRemittanceByPartnerService2_InlineSchema1.xsd"/>
      </MRWSDLAppInfo>
    </wsdl:appinfo>
  </wsdl:documentation>
  <wsdl:types>
    <xsd:schema targetNamespace="http://www.quantiguous.com/services" xmlns:ibmSchExtn="http://www.ibm.com/schema/extensions">
      <xsd:include schemaLocation="http://api.quantiguous.com/InwardRemittanceByPartnerService2?xsd=xsd0"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="startRemitRequestMsg">
    <wsdl:part element="tns:startRemit" name="remitParameters"/>
  </wsdl:message>
  <wsdl:message name="startRemitResponseMsg">
    <wsdl:part element="tns:startRemitResponse" name="remitResult"/>
  </wsdl:message>
  <wsdl:message name="getStatusRequestMsg">
    <wsdl:part element="tns:getStatus" name="getStatusParameters"/>
  </wsdl:message>
  <wsdl:message name="getStatusResponseMsg">
    <wsdl:part element="tns:getStatusResponse" name="getStatusResult"/>
  </wsdl:message>
  <wsdl:message name="getBalanceRequestMsg">
    <wsdl:part element="tns:getBalance" name="getBalanceParameters"/>
  </wsdl:message>
  <wsdl:message name="getBalanceResponseMsg">
    <wsdl:part element="tns:getBalanceResponse" name="getBalanceResult"/>
  </wsdl:message>
  <wsdl:portType name="InwardRemittanceByPartnerService2">
    <wsdl:operation name="startRemit">
      <wsdl:documentation>To start a remittance request. 
This method does priliminary checks on the request, and queues the remit for processing at a later time. 
It is necessary to introspect the response to know whether the request was accepted or not .
In case a Soap Fault is received, the request may be re-tried, as the service identifies duplicate requests &amp; accepts them only once.</wsdl:documentation>
      <wsdl:input message="tns:startRemitRequestMsg" name="startRemitRequest"/>
      <wsdl:output message="tns:startRemitResponseMsg" name="startRemitResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <wsdl:documentation>To get the status of a remit operation. A status is returned only when the request was accepted. If this service is called for a reference that did not exist, a Fault will be returned.</wsdl:documentation>
      <wsdl:input message="tns:getStatusRequestMsg" name="getStatusRequest"/>
      <wsdl:output message="tns:getStatusResponseMsg" name="getStatusResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getBalance">
      <wsdl:documentation>To get the balance for the account.</wsdl:documentation>
      <wsdl:input message="tns:getBalanceRequestMsg" name="getBalanceRequest"/>
      <wsdl:output message="tns:getBalanceResponseMsg" name="getBalanceResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="InwardRemittanceByPartnerService2HttpBinding" type="tns:InwardRemittanceByPartnerService2">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="startRemit">
      <soap12:operation soapAction="http://www.quantiguous.com/services/InwardRemittanceByPartnerService2/startRemit"/>
      <wsdl:input name="startRemitRequest">
        <soap12:body parts="remitParameters" use="literal"/>
      </wsdl:input>
      <wsdl:output name="startRemitResponse">
        <soap12:body parts="remitResult" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <soap12:operation soapAction="http://www.quantiguous.com/services/InwardRemittanceByPartnerService2/getStatus"/>
      <wsdl:input name="getStatusRequest">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatusResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBalance">
      <soap12:operation soapAction="http://www.quantiguous.com/services/InwardRemittanceByPartnerService2/getBalance"/>
      <wsdl:input name="getBalanceRequest">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBalanceResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="InwardRemittanceByPartnerService2HttpService">
    <wsdl:port binding="tns:InwardRemittanceByPartnerService2HttpBinding" name="InwardRemittanceByPartnerService2HttpPort">
      <soap12:address location="http://api.quantiguous.com/InwardRemittanceByPartnerService2"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://api.quantiguous.com/InwardRemittanceByPartnerService2?xsd=xsd0</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" targetNamespace="http://www.quantiguous.com/services" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ibmSchExtn="http://www.ibm.com/schema/extensions" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://www.quantiguous.com/services" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <xsd:element ibmSchExtn:docRoot="true" name="startRemit">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="tns:version"/>
        <xsd:element ref="tns:uniqueRequestNo"/>
        <xsd:element ref="tns:partnerCode"/>
        <xsd:element name="remitterType" type="tns:remitterType">
          <xsd:annotation>
            <xsd:documentation>Indicates whether the beneficiary is an
							Individual (I) or a Corporate (C). This
							along with the name is scrubbed against scan
							lists that are in place for AML regulations.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="remitterName" type="tns:nameType">
          <xsd:annotation>
            <xsd:documentation>The original remitter, on who's behalf the
							partner is initiating the transaction. This
							name is checked with various lists (such as
							SDN) for regulartory compliance. In case of
							a match, the transaction is not accepted
							unless a verified identity is provided to
							state the match is indeed false.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element maxOccurs="1" minOccurs="0" name="remitterAddress" type="tns:AddressType">
          <xsd:annotation>
            <xsd:documentation>The address of the remitter. The address is
							required to avoid false hits with the scan
							lists maintained to comply with regulatory
							authorities.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="remitterContact" type="tns:contactType">
          <xsd:annotation>
            <xsd:documentation>The remitter contact details, notifications
							to the remitter can be sent if these details
							are provided. Provide the mobile, email or both.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="remitterIdentities" type="tns:IdentitiesArray">
          <xsd:annotation>
            <xsd:documentation>The identities of the remitter. These are
							required in cases where the remitter name is
							found in the anti money laundering scan
							lists. The identity provided should have
							already been verified. Verification of
							identifies is an operational process,
							described elsewhere.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="beneficiaryType" type="tns:beneficiaryType">
          <xsd:annotation>
            <xsd:documentation>Indicates whether the beneficiary is an
							Individual (I) or a Corporate (C). This
							along with the name is scrubbed against scan
							lists that are in place for AML regulations.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="beneficiaryName" type="tns:nameType">
          <xsd:annotation>
            <xsd:documentation>The benficiary, to whom the funds will be
							credited. This name is checked with various
							lists (such as SDN) for regulartory
							compliance. In case of a match, the
							transaction is not accepted unless a
							verified identity is provided to state the
							match is indeed false.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element maxOccurs="1" minOccurs="0" name="beneficiaryAddress" type="tns:AddressType">
          <xsd:annotation>
            <xsd:documentation>The address of the remitter. The address is
							required to avoid false hits with the scan
							lists maintained to comply with regulatory
							authorities.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="beneficiaryContact" type="tns:contactType">
          <xsd:annotation>
            <xsd:documentation>The beneficiary contact details,
							notifications to the remitter can be sent if
							these details are provided.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="beneficiaryIdentities" type="tns:IdentitiesArray">
          <xsd:annotation>
            <xsd:documentation>The identities of the beneficiary. These are
							required in cases where the remitter name is
							found in the anti money laundering scan
							lists. The identity provided should have
							already been verified. Verification of
							identifies is an operational process,
							described elsewhere.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="beneficiaryAccountNo" type="tns:beneficiaryAccountNoType">
          <xsd:annotation>
            <xsd:documentation>The beneficiary account number. Funds will
							be credited to this account. All transfer
							types require the account number.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="beneficiaryIFSC" type="tns:IFSCType">
          <xsd:annotation>
            <xsd:documentation>The IFSC code issued to the bank/branch of
							the beneficiaray account.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="tns:transferType"/>
        <xsd:element ref="tns:transferCurrencyCode"/>
        <xsd:element name="transferAmount" type="tns:positiveDecimal"/>
        <xsd:element name="remitterToBeneficiaryInfo" type="tns:remitterToBeneficiaryInfoType">
          <xsd:annotation>
            <xsd:documentation>A friendly note from the remitter to the
							beneficiary. This is forwarded to the
							beneficiaries bank, for certain transation
							types.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="purposeCode" type="tns:purposeCodeType">
          <xsd:annotation>
            <xsd:documentation>A purpose code is mandatory as per Indian
							regulators, this is required by regulations,
							and needs to be stated by the remitter.
							False representation of the purpose code,
							has serious consequences.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element ibmSchExtn:docRoot="true" name="startRemitResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="requestReferenceNo" type="tns:referenceNoType">
          <xsd:annotation>
            <xsd:documentation>The unique reference number that was supplied
          				when the remit operation was called.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="uniqueResponseNo" type="tns:referenceNoType">
          <xsd:annotation>
            <xsd:documentation>A unique reference number that is sent back by
          				the API, (in most cases it is a UUID). For a
          				successfully accepted request, a new number is
          				generated. For a request that is identified as
          				a duplicate, the number generated the first
          				time is returned. Use this to communicate with
          				support teams.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="tns:attemptNo"/>
        <xsd:element name="reqTransferType" type="tns:transferTypeType">
          <xsd:annotation>
            <xsd:documentation>The transfer type that was sent in the request.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="statusCode">
          <xsd:annotation>
            <xsd:documentation>The status of the request. This is one of AS (accepted), AD (already accepted earlier) and NA (not accepted).
In case of NA the reason for the rejection will be available in subStatusCode where possible.</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:enumeration value="AS">
                <xsd:annotation>
                  <xsd:documentation>The request was accepted</xsd:documentation>
                </xsd:annotation>
              </xsd:enumeration>
              <xsd:enumeration value="NA">
                <xsd:annotation>
                  <xsd:documentation>The request was rejected.</xsd:documentation>
                </xsd:annotation>
              </xsd:enumeration>
              <xsd:enumeration value="AD">
                <xsd:annotation>
                  <xsd:documentation>The request was rejected (as duplicate)</xsd:documentation>
                </xsd:annotation>
              </xsd:enumeration>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="subStatusCode" type="xsd:QName">
          <xsd:annotation>
            <xsd:documentation>The detailed error code that indicates the reason for the failure (where possible).</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="subStatusText" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>An english text that explains the subStatusCode (where possible)</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element ibmSchExtn:docRoot="true" name="getStatus">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="tns:version"/>
        <xsd:element ref="tns:partnerCode"/>
        <xsd:element name="requestReferenceNo" type="tns:referenceNoType">
          <xsd:annotation>
            <xsd:documentation>The unique reference number that was
							supplied when the remit operation was
							called.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element ibmSchExtn:docRoot="true" name="getStatusResponse">
    <xsd:annotation>
      <xsd:documentation>The date on which the transaction was accepted by the
				service. This is in the timezone of the banks server.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="tns:version"/>
        <xsd:element name="reqTransferType" type="tns:transferTypeType">
          <xsd:annotation>
            <xsd:documentation>The transfer type that was sent in the request.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="transactionDate" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>The date on which the transaction was
							received by the bank. This is in the time
							zone of the bank.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="transferAmount" type="tns:positiveDecimal">
          <xsd:annotation>
            <xsd:documentation>The transaction amount, represented in the
							tranaction currency.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="transferCurrencyCode" type="tns:currencyCodeType">
          <xsd:annotation>
            <xsd:documentation>The currency code of the transaction. Only
							INR transactions are accepted.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="transferType" type="tns:transferTypeType">
          <xsd:annotation>
            <xsd:documentation>The type of transfer that was initiated for this request. 
							Usually this will be the same as what was asked for in the request. 
							It is different in the following cases: (1) In case the beneficiary if of the bank, then the mode is FT (funds transfer) (2) In case the request was of type ANY, this reflects the method that was chosen.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="tns:transactionStatus"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element ibmSchExtn:docRoot="true" name="getBalance">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="tns:version"/>
        <xsd:element ref="tns:partnerCode"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element ibmSchExtn:docRoot="true" name="getBalanceResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="tns:version"/>
        <xsd:element name="accountCurrencyCode" type="tns:currencyCodeType">
          <xsd:annotation>
            <xsd:documentation>The currency of the funding account.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="accountBalanceAmount" type="xsd:float">
          <xsd:annotation>
            <xsd:documentation>The balance in the funding account. This is
						represented in the account currency.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="tns:lowBalanceAlert"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:simpleType name="remitterType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="I"/>
      <xsd:enumeration value="C"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="beneficiaryType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="I"/>
      <xsd:enumeration value="C"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="nameType">
    <xsd:choice>
      <xsd:element name="fullName" type="tns:fullNameType2">
        <xsd:annotation>
          <xsd:documentation>The full name of the individual or the company.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  <xsd:simpleType name="partnerCodeType">
    <xsd:restriction base="xsd:token">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="10"/>
      <xsd:whiteSpace value="collapse"/>
      <xsd:pattern value="\w{1,10}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="accountNoType">
    <xsd:annotation>
      <xsd:documentation>The minimum length of 10 is as per backend systems.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="10"/>
      <xsd:maxLength value="20"/>
      <xsd:whiteSpace value="collapse"/>
      <xsd:pattern value="\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="IFSCType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z|a-z]{4}0[A-Z|a-z|0-9]{6}"/>
      <xsd:length value="11"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="purposeCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:length value="4"/>
      <xsd:pattern value="PC\d{2}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="IdentitiesArray">
    <xsd:sequence>
      <xsd:element maxOccurs="4" minOccurs="0" name="identity" type="tns:IdentityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="transactionStatusType">
    <xsd:sequence>
      <xsd:element name="statusCode">
        <xsd:annotation>
          <xsd:documentation>FAILED: The transaction has failed, it can be
						attempted again with the same reference number.
						IN_PROCESS: The transaction is still in process
						within our bank please check after some time.
						SCHEDULED_FOR_NEXT_WORKDAY: The transaction will
						not be processed till the next working day.
						Funds from your account have not been debited.
						SENT_TO_BENEFICIARY : The transaction has been
						sent to the beneficiary bank, and a confirmation
						is awaited. RETURNED_FROM_BENEFICIARY: The
						transaction has been returned back from the
						beneficiary bank. COMPLETED: The transaction has
						been confirmed as credited by the beneficiary
						bank.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:token">
            <xsd:enumeration value="FAILED"/>
            <xsd:enumeration value="IN_PROCESS"/>
            <xsd:enumeration value="SCHEDULED_FOR_NEXT_WORKDAY"/>
            <xsd:enumeration value="SENT_TO_BENEFICIARY"/>
            <xsd:enumeration value="RETURNED_FROM_BENEFICIARY"/>
            <xsd:enumeration value="COMPLETED"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element minOccurs="0" name="subStatusCode" type="xsd:QName">
        <xsd:annotation>
          <xsd:documentation>A code that gives the detailed reason for a
						FAILED and RETURNED_FROM_BENEFICIARY
						transaction. This is useful to decide what is
						the next action to be taken</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="subStatusText" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>The english text that represents the subStatusCode</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="bankReferenceNo">
        <xsd:annotation>
          <xsd:documentation>The reference number generated by the bank, and
						passed on to the payment network. This is useful
						for NEFT and IMPS transactions. It is usually
						communicated to the beneficiary and can be given
						to the original remitter.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="0"/>
            <xsd:maxLength value="64"/>
            <xsd:whiteSpace value="collapse"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="contactType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="mobileNo" type="tns:mobileNoType">
        <xsd:annotation>
          <xsd:documentation>Mobile number to which transaction status notifications
						can be sent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="emailID" type="tns:emailIDType">
        <xsd:annotation>
          <xsd:documentation>The email address to which transaction status
						notifications can be sent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="reviewStatusType">
    <xsd:sequence>
      <xsd:element name="reviewRequired" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>This will always be false. In a future release, this will set to true to indicate if specifical information is sought w.r.t this transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="itemsForReview">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="itemForReview">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="justificationCode" type="xsd:token">
                    <xsd:annotation>
                      <xsd:documentation>Codes are available for
												frequently asked
												justifications. These
												are used for reporting.</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element name="justificationText">
                    <xsd:annotation>
                      <xsd:documentation>The justification that
												is sought with respect
												to the transaction. This
												is the complete text of
												the justification that
												has been asked for.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:maxLength value="255"></xsd:maxLength>
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:element>
                  <xsd:element name="statusCode">
                    <xsd:annotation>
                      <xsd:documentation>Indicates whether the
												review of the
												justification provided
												was completed. Review is
												done operationally by
												the banks risk and
												compliance teams.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:token">
                        <xsd:enumeration value="COMPLETED"/>
                        <xsd:enumeration value="PENDING"/>
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:element>
                  <xsd:element name="reviewedOn" type="xsd:date">
                    <xsd:annotation>
                      <xsd:documentation>The date on which the
												review was completed.</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element name="reviewRemark">
                    <xsd:annotation>
                      <xsd:documentation>Remarks entered by the
												reviewer while
												completing the review.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:maxLength value="255"></xsd:maxLength>
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="version" nillable="true" type="tns:versionType">
    <xsd:annotation>
      <xsd:documentation>When sent in the request, this reflects the version that
				is known to the client. Clients should always send a
				value that they were developed with. When sent in the
				reply, this reflects the version that is known to the
				server. This is updated whenever there is a change in
				the specification or the behavior of the server. These
				versions are not required to match, and are to be used
				to when dealing with compatibility issues.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="uniqueRequestNo" nillable="true" type="tns:referenceNoType">
    <xsd:annotation>
      <xsd:documentation>A unique reference number to be sent by the client
				application. The API ensures that duplicate requests are
				rejected. It is the responsibility of the client to
				ensure that a unique reference is always generated. A
				UUID may be used if no other mechanism is available.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="partnerCode" nillable="true" type="tns:partnerCodeType">
    <xsd:annotation>
      <xsd:documentation>The unique ID assigned to the parter. This is the ID
				that is communicated to the partner and is required to
				be sent with every request. This is used as an
				identifier and does not implement security. For
				authentication, refer the security notes.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="transferType" nillable="true" type="tns:transferTypeType">
    <xsd:annotation>
      <xsd:documentation>The transfer mechanism to be used for this request. Multiple transfer mechanisms are available, with different charges, limits and cutoff times. 
It is possible to ask for 'ANY', in which case the best transfer method will be selected basis the transaction details. In this case the transferType that is chosen is returned in the response.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="transferCurrencyCode" nillable="true" type="tns:currencyCodeType">
    <xsd:annotation>
      <xsd:documentation>The currency code of the transaction amount. The only
				allowed value is the local currency (INR).</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="transferAmount" type="tns:positiveDecimal"/>
  <xsd:element name="lowBalanceAlert" nillable="true" type="xsd:boolean">
    <xsd:annotation>
      <xsd:documentation>A low balance threshold can be configured for the
				partners, If the balance in the drawing account drops
				below this threshold, alerts are sent, to give advance
				notice to the partner. This is important transactions
				are rejected the drawing account is not sufficiently
				funded.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="transferTypeType">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="NEFT"/>
      <xsd:enumeration value="IMPS"/>
      <xsd:enumeration value="FT"/>
      <xsd:enumeration value="ANY"/>
      <xsd:enumeration value="RTGS"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="verificationType">
    <xsd:sequence>
      <xsd:element name="infoCode" type="xsd:token">
        <xsd:annotation>
          <xsd:documentation>A code that uniquely identifies the nature of
						information that is required. This is useful for
						reporting and quick answers.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="infoDescription" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>A long description of the information that is
						being requested. This is human readable.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="transactionStatus" nillable="true" type="tns:transactionStatusType">
    <xsd:annotation>
      <xsd:documentation>The detailed status of the transaction.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="reviewStatus" nillable="true" type="tns:reviewStatusType">
    <xsd:annotation>
      <xsd:documentation>This is for future use. For now reviewRequired will always be false.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="uniqueResponseNo" type="tns:referenceNoType">
    <xsd:annotation>
      <xsd:documentation>A unique reference number that is sent back
				by the API. This reference number can be
				used to inquire about the status of a
				request, and is usually presented on a user
				interface.. A UUID may be returned if no
				other mechanism is available.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="beneficiaryAccountNoType">
    <xsd:annotation>
      <xsd:documentation>The minimum length of 1 is as per the information shared by bank.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="34"/>
      <xsd:whiteSpace value="collapse"/>
      <xsd:pattern value="\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="attemptNo">
    <xsd:annotation>
      <xsd:documentation>The attempt no starts with 1 and is incremented by 1 for every request that is received with the same reference number. This is used to keep uniquely identify a request attempt. Repeated attempts are not allowed once the transaction has been accepted successfuly.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:positiveInteger">
        <xsd:minInclusive value="1"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:simpleType name="versionType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="5"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="referenceNoType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="32"/>
      <xsd:minLength value="1"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="nonNegativeFloat">
    <xsd:restriction base="xsd:float">
      <xsd:minInclusive value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="positiveFloat">
    <xsd:restriction base="xsd:float">
      <xsd:minExclusive value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="positiveDecimal">
    <xsd:restriction base="xsd:decimal">
      <xsd:minExclusive value="0"/>
      <xsd:fractionDigits value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="currencyCodeType">
    <xsd:annotation>
      <xsd:documentation>ISO 4217</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="INR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="remitterToBeneficiaryInfoType">
    <xsd:annotation>
      <xsd:documentation>The minimum length of 2 is as per bank end systems.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="2"/>
      <xsd:maxLength value="120"/>
      <xsd:pattern value="(\w|\s|\.|,|-)*"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="mobileNoType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="7"/>
      <xsd:maxLength value="16"/>
      <xsd:whiteSpace value="collapse"/>
      <xsd:pattern value="\d{7,16}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="emailIDType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="3"/>
      <xsd:maxLength value="100"/>
      <xsd:pattern value=".+@.+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="postalCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="15"/>
      <xsd:pattern value="(\w|-|)*"></xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="cityNameType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="50"/>
      <xsd:pattern value="(&quot;|(|)|:|\?|\{|\}|!|@|#|\|%|!|\w|\.|-| )*"></xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="stateOrProvinceNameType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="50"/>
      <xsd:pattern value="(&quot;|(|)|:|\?|\{|\}|!|@|#|\|%|!|\w|\.|-| )*"></xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="fullNameType2">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="80"/>
      <xsd:pattern value="(&quot;|(|)|:|\?|\{|\}|!|@|#|\|%|!|\w|\.|-| )*"></xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="addressLineType2">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="120"/>
      <xsd:pattern value="(&quot;|(|)|:|\?|\{|\}|!|@|#|\|%|!|\w|\.|-| )*"></xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="AddressType">
    <xsd:sequence>
      <xsd:element name="address1" type="tns:addressLineType2">
        <xsd:annotation>
          <xsd:documentation>The line 1 of the address.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element maxOccurs="1" minOccurs="0" name="address2" type="tns:addressLineType2">
        <xsd:annotation>
          <xsd:documentation>The line 2 of the address</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element maxOccurs="1" minOccurs="0" name="address3" type="tns:addressLineType2">
        <xsd:annotation>
          <xsd:documentation>The line 3 of the address.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element maxOccurs="1" minOccurs="0" name="postalCode" type="tns:postalCodeType">
        <xsd:annotation>
          <xsd:documentation>The postal code.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element maxOccurs="1" minOccurs="0" name="city" type="tns:cityNameType">
        <xsd:annotation>
          <xsd:documentation>The city Name.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element maxOccurs="1" minOccurs="0" name="stateOrProvince" type="tns:stateOrProvinceNameType">
        <xsd:annotation>
          <xsd:documentation>The state/province Name.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element maxOccurs="1" minOccurs="0" name="country">
        <xsd:annotation>
          <xsd:documentation>The ISO 3166-1 alpha-2 country code (IN = India, US = United Stated of America). Refer http://en.wikipedia.org/wiki/ISO_3166-1</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:pattern value="[A-Z]{2}"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IdentityType">
    <xsd:choice>
      <xsd:sequence>
        <xsd:element name="idType">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:minLength value="1"/>
              <xsd:maxLength value="30"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="idNumber">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:minLength value="1"/>
              <xsd:maxLength value="50"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="idCountry">
          <xsd:annotation>
            <xsd:documentation>The ISO 3166-1 alpha-2 country code (IN = India, US = United Stated of America). Refer http://en.wikipedia.org/wiki/ISO_3166-1</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:length value="2"/>
              <xsd:pattern value="[A-Z]{2}"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="issueDate" type="xsd:date"/>
        <xsd:element name="expiryDate" type="xsd:date"/>
      </xsd:sequence>
    </xsd:choice>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://api.quantiguous.com/InwardRemittanceByPartnerService2</con:endpoint></con:endpoints><con:operation id="51865db4-dbcd-4be0-978a-99a060c5b972" isOneWay="false" action="http://www.quantiguous.com/services/InwardRemittanceByPartnerService2/getBalance" name="getBalance" bindingOperationName="getBalance" type="Request-Response" outputName="getBalanceResponse" inputName="getBalanceRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="831c74e8-e726-4dce-a4f7-992fc038e2f4" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://api.quantiguous.com/InwardRemittanceByPartnerService2</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ser="http://www.quantiguous.com/services">
   <soap:Header/>
   <soap:Body>
      <ser:getBalance>
         <ser:version>1.0</ser:version>
         <ser:partnerCode>PC99</ser:partnerCode>
      </ser:getBalance>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:username>guest</con:username><con:password>qg123$#</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.quantiguous.com/services/InwardRemittanceByPartnerService2/getBalanceRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="67369a5f-5eaa-486a-8e3c-1fdf2c04135a" isOneWay="false" action="http://www.quantiguous.com/services/InwardRemittanceByPartnerService2/getStatus" name="getStatus" bindingOperationName="getStatus" type="Request-Response" outputName="getStatusResponse" inputName="getStatusRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ad92d95e-3283-4002-8e5a-e1a43f5bc8c7" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://api.quantiguous.com/InwardRemittanceByPartnerService2</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ser="http://www.quantiguous.com/services">
   <soap:Header/>
   <soap:Body>
      <ser:getStatus>
         <ser:version>1.0</ser:version>
         <ser:partnerCode>PC99</ser:partnerCode>
         <ser:requestReferenceNo>NEFTTEST101213</ser:requestReferenceNo>
      </ser:getStatus>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:username>guest</con:username><con:password>qg123$#</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.quantiguous.com/services/InwardRemittanceByPartnerService2/getStatusRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="afd94d4c-7a2d-4406-99ee-a33cd475d172" isOneWay="false" action="http://www.quantiguous.com/services/InwardRemittanceByPartnerService2/startRemit" name="startRemit" bindingOperationName="startRemit" type="Request-Response" outputName="startRemitResponse" inputName="startRemitRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="36956b86-2285-430f-b2dd-ef2327e41660" name="ditto - NEFT"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://api.quantiguous.com/InwardRemittanceByPartnerService2</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ser="http://www.quantiguous.com/services">
   <soap:Header/>
   <soap:Body>
      <ser:startRemit>
         <ser:version>1.0</ser:version>
         <ser:uniqueRequestNo>NEFTTEST101213</ser:uniqueRequestNo>
         <ser:partnerCode>PC99</ser:partnerCode>
         <ser:remitterType>I</ser:remitterType>
         <ser:remitterName>
            <ser:fullName>neha</ser:fullName>
         </ser:remitterName>
         <ser:remitterAddress>
            <ser:address1>Mumbai DITTO FUND </ser:address1>
            <!--Optional:-->
            <!--Optional:-->
            <ser:address3>MAlad</ser:address3>
            <!--Optional:-->
            <ser:postalCode>222002</ser:postalCode>
            <!--Optional:-->
            <ser:city>Mumbai</ser:city>
            <!--Optional:-->
            <ser:stateOrProvince>Maharastra</ser:stateOrProvince>
            <!--Optional:-->
            <ser:country>IN</ser:country>
         </ser:remitterAddress>
         <ser:remitterContact>
            <ser:mobileNo>8976613173</ser:mobileNo>
            <ser:emailID>dj.sreyas@gmail.com</ser:emailID>
         </ser:remitterContact>
         <ser:remitterIdentities>
            <!--0 to 4 repetitions:-->
            <ser:identity>
               <ser:idType>passport</ser:idType>
               <ser:idNumber>1231231</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
            <ser:identity>
               <ser:idType>birthcerti</ser:idType>
               <ser:idNumber>12356</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
            <ser:identity>
               <ser:idType>dl</ser:idType>
               <ser:idNumber>887655</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
         </ser:remitterIdentities>
         <ser:beneficiaryType>I</ser:beneficiaryType>
         <ser:beneficiaryName>
            <ser:fullName>DITTO</ser:fullName>
         </ser:beneficiaryName>
         <ser:beneficiaryAddress>
            <ser:address1>addr1</ser:address1>
            <!--Optional:-->
            <ser:address2>addr2</ser:address2>
            <!--Optional:-->
            <ser:address3>addr3</ser:address3>
            <!--Optional:-->
            <ser:postalCode>222001</ser:postalCode>
            <!--Optional:-->
            <ser:city>Mumbai</ser:city>
            <!--Optional:-->
            <ser:stateOrProvince>Maharstar</ser:stateOrProvince>
            <!--Optional:-->
            <ser:country>IN</ser:country>
         </ser:beneficiaryAddress>
         <ser:beneficiaryContact>
            <ser:mobileNo>8976613173</ser:mobileNo>
            <ser:emailID>bene.a@gmail.com</ser:emailID>
         </ser:beneficiaryContact>
         <ser:beneficiaryIdentities>
            <!--0 to 4 repetitions:-->
            <ser:identity>
               <ser:idType>passport1</ser:idType>
               <ser:idNumber>1231231</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
            <ser:identity>
               <ser:idType>birthcerti1</ser:idType>
               <ser:idNumber>12356</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
         </ser:beneficiaryIdentities>
         <ser:beneficiaryAccountNo>751990600011174</ser:beneficiaryAccountNo>
         <ser:beneficiaryIFSC>HDFC0000001</ser:beneficiaryIFSC>
         <ser:transferType>NEFT</ser:transferType>
         <ser:transferCurrencyCode>INR</ser:transferCurrencyCode>
         <ser:transferAmount>300</ser:transferAmount>
         <ser:remitterToBeneficiaryInfo>DITTO FUND TRANSFE</ser:remitterToBeneficiaryInfo>
         <ser:purposeCode>PC10</ser:purposeCode>
      </ser:startRemit>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:username>guest</con:username><con:password>qg123$#</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.quantiguous.com/services/InwardRemittanceByPartnerService2/startRemitRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="32c9da10-8ed5-472c-97ed-32bbb1e583e0" name="ditto - FT"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://api.quantiguous.com/InwardRemittanceByPartnerService2</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ser="http://www.quantiguous.com/services">
   <soap:Header/>
   <soap:Body>
      <ser:startRemit>
         <ser:version>1.0</ser:version>
         <ser:uniqueRequestNo>NEFTTE12ST12</ser:uniqueRequestNo>
         <ser:partnerCode>PC99</ser:partnerCode>
         <ser:remitterType>I</ser:remitterType>
         <ser:remitterName>
            <ser:fullName>neha</ser:fullName>
         </ser:remitterName>
         <ser:remitterAddress>
            <ser:address1>Mumbai DITTO FUND </ser:address1>
            <!--Optional:-->
            <!--Optional:-->
            <ser:address3>MAlad</ser:address3>
            <!--Optional:-->
            <ser:postalCode>222002</ser:postalCode>
            <!--Optional:-->
            <ser:city>Mumbai</ser:city>
            <!--Optional:-->
            <ser:stateOrProvince>Maharastra</ser:stateOrProvince>
            <!--Optional:-->
            <ser:country>IN</ser:country>
         </ser:remitterAddress>
         <ser:remitterContact>
            <ser:mobileNo>8976613173</ser:mobileNo>
            <ser:emailID>dj.sreyas@gmail.com</ser:emailID>
         </ser:remitterContact>
         <ser:remitterIdentities>
            <!--0 to 4 repetitions:-->
            <ser:identity>
               <ser:idType>passport</ser:idType>
               <ser:idNumber>1231231</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
            <ser:identity>
               <ser:idType>birthcerti</ser:idType>
               <ser:idNumber>12356</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
            <ser:identity>
               <ser:idType>dl</ser:idType>
               <ser:idNumber>887655</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
         </ser:remitterIdentities>
         <ser:beneficiaryType>I</ser:beneficiaryType>
         <ser:beneficiaryName>
            <ser:fullName>DITTO</ser:fullName>
         </ser:beneficiaryName>
         <ser:beneficiaryAddress>
            <ser:address1>addr1</ser:address1>
            <!--Optional:-->
            <ser:address2>addr2</ser:address2>
            <!--Optional:-->
            <ser:address3>addr3</ser:address3>
            <!--Optional:-->
            <ser:postalCode>222001</ser:postalCode>
            <!--Optional:-->
            <ser:city>Mumbai</ser:city>
            <!--Optional:-->
            <ser:stateOrProvince>Maharstar</ser:stateOrProvince>
            <!--Optional:-->
            <ser:country>IN</ser:country>
         </ser:beneficiaryAddress>
         <ser:beneficiaryContact>
            <ser:mobileNo>8976613173</ser:mobileNo>
            <ser:emailID>bene.a@gmail.com</ser:emailID>
         </ser:beneficiaryContact>
         <ser:beneficiaryIdentities>
            <!--0 to 4 repetitions:-->
            <ser:identity>
               <ser:idType>passport1</ser:idType>
               <ser:idNumber>1231231</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
            <ser:identity>
               <ser:idType>birthcerti1</ser:idType>
               <ser:idNumber>12356</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
         </ser:beneficiaryIdentities>
         <ser:beneficiaryAccountNo>751990600011174</ser:beneficiaryAccountNo>
         <ser:beneficiaryIFSC>YESB0000001</ser:beneficiaryIFSC>
         <ser:transferType>FT</ser:transferType>
         <ser:transferCurrencyCode>INR</ser:transferCurrencyCode>
         <ser:transferAmount>300</ser:transferAmount>
         <ser:remitterToBeneficiaryInfo>DITTO FUND TRANSFE</ser:remitterToBeneficiaryInfo>
         <ser:purposeCode>PC10</ser:purposeCode>
      </ser:startRemit>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:username>guest</con:username><con:password>qg123$#</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.quantiguous.com/services/InwardRemittanceByPartnerService2/startRemitRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="8eabf147-6eb0-4e37-9a1e-647c470039f9" name="ditto - IMPS"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://api.quantiguous.com/InwardRemittanceByPartnerService2</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ser="http://www.quantiguous.com/services">
   <soap:Header/>
   <soap:Body>
      <ser:startRemit>
         <ser:version>1.0</ser:version>
         <ser:uniqueRequestNo>IMTEST212</ser:uniqueRequestNo>
         <ser:partnerCode>PC99</ser:partnerCode>
         <ser:remitterType>I</ser:remitterType>
         <ser:remitterName>
            <ser:fullName>neha</ser:fullName>
         </ser:remitterName>
         <ser:remitterAddress>
            <ser:address1>Mumbai DITTO FUND </ser:address1>
            <!--Optional:-->
            <!--Optional:-->
            <ser:address3>MAlad</ser:address3>
            <!--Optional:-->
            <ser:postalCode>222002</ser:postalCode>
            <!--Optional:-->
            <ser:city>Mumbai</ser:city>
            <!--Optional:-->
            <ser:stateOrProvince>Maharastra</ser:stateOrProvince>
            <!--Optional:-->
            <ser:country>IN</ser:country>
         </ser:remitterAddress>
         <ser:remitterContact>
            <ser:mobileNo>8976613173</ser:mobileNo>
            <ser:emailID>dj.sreyas@gmail.com</ser:emailID>
         </ser:remitterContact>
         <ser:remitterIdentities>
            <!--0 to 4 repetitions:-->
            <ser:identity>
               <ser:idType>passport</ser:idType>
               <ser:idNumber>1231231</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
            <ser:identity>
               <ser:idType>birthcerti</ser:idType>
               <ser:idNumber>12356</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
            <ser:identity>
               <ser:idType>dl</ser:idType>
               <ser:idNumber>887655</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
         </ser:remitterIdentities>
         <ser:beneficiaryType>I</ser:beneficiaryType>
         <ser:beneficiaryName>
            <ser:fullName>DITTO</ser:fullName>
         </ser:beneficiaryName>
         <ser:beneficiaryAddress>
            <ser:address1>addr1</ser:address1>
            <!--Optional:-->
            <ser:address2>addr2</ser:address2>
            <!--Optional:-->
            <ser:address3>addr3</ser:address3>
            <!--Optional:-->
            <ser:postalCode>222001</ser:postalCode>
            <!--Optional:-->
            <ser:city>Mumbai</ser:city>
            <!--Optional:-->
            <ser:stateOrProvince>Maharstar</ser:stateOrProvince>
            <!--Optional:-->
            <ser:country>IN</ser:country>
         </ser:beneficiaryAddress>
         <ser:beneficiaryContact>
            <ser:mobileNo>8976613173</ser:mobileNo>
            <ser:emailID>bene.a@gmail.com</ser:emailID>
         </ser:beneficiaryContact>
         <ser:beneficiaryIdentities>
            <!--0 to 4 repetitions:-->
            <ser:identity>
               <ser:idType>passport1</ser:idType>
               <ser:idNumber>1231231</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
            <ser:identity>
               <ser:idType>birthcerti1</ser:idType>
               <ser:idNumber>12356</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
         </ser:beneficiaryIdentities>
         <ser:beneficiaryAccountNo>EE00</ser:beneficiaryAccountNo>
         <ser:beneficiaryIFSC>HDFC0000001</ser:beneficiaryIFSC>
         <ser:transferType>IMPS</ser:transferType>
         <ser:transferCurrencyCode>INR</ser:transferCurrencyCode>
         <ser:transferAmount>300</ser:transferAmount>
         <ser:remitterToBeneficiaryInfo>DITTO</ser:remitterToBeneficiaryInfo>
         <ser:purposeCode>PC06</ser:purposeCode>
      </ser:startRemit>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:username>guest</con:username><con:password>qg123$#</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.quantiguous.com/services/InwardRemittanceByPartnerService2/startRemitRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="90f4b179-7824-4071-89ee-bdfa97fb1e0e" name="ditto timedout - RTGS(success)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://api.quantiguous.com/InwardRemittanceByPartnerService2</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ser="http://www.quantiguous.com/services">
   <soap:Header/>
   <soap:Body>
      <ser:startRemit>
         <ser:version>1.0</ser:version>
         <ser:uniqueRequestNo>rtgs1215</ser:uniqueRequestNo>
         <ser:partnerCode>PC99</ser:partnerCode>
         <ser:remitterType>I</ser:remitterType>
         <ser:remitterName>
            <ser:fullName>neha</ser:fullName>
         </ser:remitterName>
         <ser:remitterAddress>
            <ser:address1>Mumbai DITTO FUND </ser:address1>
            <!--Optional:-->
            <!--Optional:-->
            <ser:address3>MAlad</ser:address3>
            <!--Optional:-->
            <ser:postalCode>222002</ser:postalCode>
            <!--Optional:-->
            <ser:city>Mumbai</ser:city>
            <!--Optional:-->
            <ser:stateOrProvince>Maharastra</ser:stateOrProvince>
            <!--Optional:-->
            <ser:country>IN</ser:country>
         </ser:remitterAddress>
         <ser:remitterContact>
            <ser:mobileNo>8976613173</ser:mobileNo>
            <ser:emailID>dj.sreyas@gmail.com</ser:emailID>
         </ser:remitterContact>
         <ser:remitterIdentities>
            <!--0 to 4 repetitions:-->
            <ser:identity>
               <ser:idType>passport</ser:idType>
               <ser:idNumber>1231231</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
            <ser:identity>
               <ser:idType>birthcerti</ser:idType>
               <ser:idNumber>12356</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
            <ser:identity>
               <ser:idType>dl</ser:idType>
               <ser:idNumber>887655</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
         </ser:remitterIdentities>
         <ser:beneficiaryType>I</ser:beneficiaryType>
         <ser:beneficiaryName>
            <ser:fullName>DITTO DELAY</ser:fullName>
         </ser:beneficiaryName>
         <ser:beneficiaryAddress>
            <ser:address1>addr1</ser:address1>
            <!--Optional:-->
            <ser:address2>addr2</ser:address2>
            <!--Optional:-->
            <ser:address3>addr3</ser:address3>
            <!--Optional:-->
            <ser:postalCode>222001</ser:postalCode>
            <!--Optional:-->
            <ser:city>Mumbai</ser:city>
            <!--Optional:-->
            <ser:stateOrProvince>Maharstar</ser:stateOrProvince>
            <!--Optional:-->
            <ser:country>IN</ser:country>
         </ser:beneficiaryAddress>
         <ser:beneficiaryContact>
            <ser:mobileNo>8976613173</ser:mobileNo>
            <ser:emailID>bene.a@gmail.com</ser:emailID>
         </ser:beneficiaryContact>
         <ser:beneficiaryIdentities>
            <!--0 to 4 repetitions:-->
            <ser:identity>
               <ser:idType>passport1</ser:idType>
               <ser:idNumber>1231231</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
            <ser:identity>
               <ser:idType>birthcerti1</ser:idType>
               <ser:idNumber>12356</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
         </ser:beneficiaryIdentities>
         <ser:beneficiaryAccountNo>751990600011174</ser:beneficiaryAccountNo>
         <ser:beneficiaryIFSC>HDFC0000001</ser:beneficiaryIFSC>
         <ser:transferType>RTGS</ser:transferType>
         <ser:transferCurrencyCode>INR</ser:transferCurrencyCode>
         <ser:transferAmount>300000</ser:transferAmount>
         <ser:remitterToBeneficiaryInfo>DITTO DELAY</ser:remitterToBeneficiaryInfo>
         <ser:purposeCode>PC51</ser:purposeCode>
      </ser:startRemit>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:username>guest</con:username><con:password>qg123$#</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.quantiguous.com/services/InwardRemittanceByPartnerService2/startRemitRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="45b9918f-ce11-4e16-8a5c-cc57daebdac5" name="ditto  - NEFT - scheduled for next work day"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://api.quantiguous.com/InwardRemittanceByPartnerService2</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ser="http://www.quantiguous.com/services">
   <soap:Header/>
   <soap:Body>
      <ser:startRemit>
         <ser:version>1.0</ser:version>
         <ser:uniqueRequestNo>rtg1122s1215</ser:uniqueRequestNo>
         <ser:partnerCode>PC99</ser:partnerCode>
         <ser:remitterType>I</ser:remitterType>
         <ser:remitterName>
            <ser:fullName>neha</ser:fullName>
         </ser:remitterName>
         <ser:remitterAddress>
            <ser:address1>Mumbai DITTO FUND </ser:address1>
            <!--Optional:-->
            <!--Optional:-->
            <ser:address3>MAlad</ser:address3>
            <!--Optional:-->
            <ser:postalCode>222002</ser:postalCode>
            <!--Optional:-->
            <ser:city>Mumbai</ser:city>
            <!--Optional:-->
            <ser:stateOrProvince>Maharastra</ser:stateOrProvince>
            <!--Optional:-->
            <ser:country>IN</ser:country>
         </ser:remitterAddress>
         <ser:remitterContact>
            <ser:mobileNo>8976613173</ser:mobileNo>
            <ser:emailID>dj.sreyas@gmail.com</ser:emailID>
         </ser:remitterContact>
         <ser:remitterIdentities>
            <!--0 to 4 repetitions:-->
            <ser:identity>
               <ser:idType>passport</ser:idType>
               <ser:idNumber>1231231</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
            <ser:identity>
               <ser:idType>birthcerti</ser:idType>
               <ser:idNumber>12356</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
            <ser:identity>
               <ser:idType>dl</ser:idType>
               <ser:idNumber>887655</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
         </ser:remitterIdentities>
         <ser:beneficiaryType>I</ser:beneficiaryType>
         <ser:beneficiaryName>
            <ser:fullName>DITTO</ser:fullName>
         </ser:beneficiaryName>
         <ser:beneficiaryAddress>
            <ser:address1>addr1</ser:address1>
            <!--Optional:-->
            <ser:address2>addr2</ser:address2>
            <!--Optional:-->
            <ser:address3>addr3</ser:address3>
            <!--Optional:-->
            <ser:postalCode>222001</ser:postalCode>
            <!--Optional:-->
            <ser:city>Mumbai</ser:city>
            <!--Optional:-->
            <ser:stateOrProvince>Maharstar</ser:stateOrProvince>
            <!--Optional:-->
            <ser:country>IN</ser:country>
         </ser:beneficiaryAddress>
         <ser:beneficiaryContact>
            <ser:mobileNo>8976613173</ser:mobileNo>
            <ser:emailID>bene.a@gmail.com</ser:emailID>
         </ser:beneficiaryContact>
         <ser:beneficiaryIdentities>
            <!--0 to 4 repetitions:-->
            <ser:identity>
               <ser:idType>passport1</ser:idType>
               <ser:idNumber>1231231</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
            <ser:identity>
               <ser:idType>birthcerti1</ser:idType>
               <ser:idNumber>12356</ser:idNumber>
               <ser:idCountry>IN</ser:idCountry>
               <ser:issueDate>2016-01-10</ser:issueDate>
               <ser:expiryDate>2016-02-20</ser:expiryDate>
            </ser:identity>
         </ser:beneficiaryIdentities>
         <ser:beneficiaryAccountNo>491990600011174</ser:beneficiaryAccountNo>
         <ser:beneficiaryIFSC>HDFC0000001</ser:beneficiaryIFSC>
         <ser:transferType>NEFT</ser:transferType>
         <ser:transferCurrencyCode>INR</ser:transferCurrencyCode>
         <ser:transferAmount>3000</ser:transferAmount>
         <ser:remitterToBeneficiaryInfo>DITTO</ser:remitterToBeneficiaryInfo>
         <ser:purposeCode>PC51</ser:purposeCode>
      </ser:startRemit>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:username>guest</con:username><con:password>qg123$#</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.quantiguous.com/services/InwardRemittanceByPartnerService2/startRemitRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>